name: App build and tests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['8.2']
        db-types: ['MySQL']

    name: PHPUnit ${{ matrix.php-versions }} ${{ matrix.db-types }}

    services:
      # Docker
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: symfony
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      #  To automatically get bug fixes and new Php versions for shivammathur/setup-php,
      # change this to (see https://github.com/shivammathur/setup-php#bookmark-versioning):
      # uses: shivammathur/setup-php@v2
      - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
        with:
          php-version: '8.2'

      - uses: actions/checkout@v3

      # Environment
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.dist', '.env');"
      - name: Copy .env.test
        run: php -r "file_exists('.env.test') || copy('.env.test.dist', '.env.test');"

      - name: Set APP_ENV to test
        run: echo "APP_ENV=test" >> $GITHUB_ENV

      # Composer
      - name: Validate composer.json and composer.lock
        run: composer validate --strict
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      # Symfony requirements
      - name: Check Symfony requirements
        run: vendor/bin/requirements-checker

      # CS Fixer
      - name: Run CS Fixer
        run: composer run-script check

      # PHPStan
      - name: Run PHPStan
        run: composer run-script stan

      - name: Create database and schema
        run: |
          bin/console doctrine:database:create --env=test && bin/console doctrine:schema:create --env=test

      # Test suite
      - name: Run unit tests
        run: composer run-script test

      # Yarn
      - name: Prepare Node for Yarn
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Yarn install
        run: yarn install

      - name: Yarn build
        run: yarn run encore production
